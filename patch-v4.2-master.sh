#!/bin/bash

###############################################################################
# üç∞ Bakery ERP v4.2 COMPLETE PATCH
# –†–µ—Ü–µ–ø—Ç—ã + –ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã + –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + PDF
###############################################################################

set -e

echo "üç∞ Bakery ERP v4.2 COMPLETE PATCH"
echo "=================================="
echo ""
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:"
echo "  ‚úÖ –¢–∏–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (RAW/SEMI_OWN/SEMI_BOUGHT/PACK)"
echo "  ‚úÖ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã (–ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã)"
echo "  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏"
echo "  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤"
echo "  ‚úÖ PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–ø—Ä–∞–π—Å—ã, –∑–∞–∫–∞–∑—ã)"
echo "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—Ü–µ–Ω–æ–∫"
echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n) " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 1
fi

echo ""
echo "üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–∞ v4.2..."
echo ""

# –ó–∞–ø—É—Å—Ç–∏—Ç—å part1 –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "./patch-v4.2-part1.sh" ]; then
    chmod +x ./patch-v4.2-part1.sh
    ./patch-v4.2-part1.sh
fi

echo ""
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json –¥–ª—è PDF..."
echo ""

# –î–æ–±–∞–≤–∏—Ç—å pdfkit –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
cat > backend/package.json << 'EOF'
{
  "name": "bakery-backend",
  "version": "4.2.0",
  "type": "module",
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "pg": "^8.11.3",
    "sequelize": "^6.35.0",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "pdfkit": "^0.13.0"
  }
}
EOF

echo ""
echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Settings..."
echo ""

mkdir -p frontend/src/pages

cat > frontend/src/pages/SettingsPage.js << 'EOFSETTINGS'
import React, { useState, useEffect } from 'react';

function SettingsPage() {
  const [settings, setSettings] = useState({
    wholesaleMarkup: 10,
    retail1Markup: 40,
    retail2Markup: 70,
    laborCostPercent: 10,
    overheadPercent: 5,
    companyName: 'Sazhenko Bakery'
  });

  const token = localStorage.getItem('token');

  useEffect(() => {
    fetchSettings();
  }, []);

  const fetchSettings = async () => {
    const res = await fetch('http://localhost:3000/api/settings', {
      headers: { Authorization: `Bearer ${token}` }
    });
    const data = await res.json();
    setSettings(data);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    await fetch('http://localhost:3000/api/settings', {
      method: 'PUT',
      headers: { 
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`
      },
      body: JSON.stringify(settings)
    });
    alert('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ! –¶—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤ –±—É–¥—É—Ç—å –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤–∞–Ω—ñ.');
    fetchSettings();
  };

  return (
    <div>
      <div className="card">
        <h2>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2>
        <p style={{color: '#666', marginTop: 10}}>
          –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è
        </p>

        <form onSubmit={handleSubmit} style={{marginTop: 20}}>
          <div style={{marginBottom: 20}}>
            <h3>–ù–∞—Ü–µ–Ω–∫–∏ (%)</h3>
            <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: 15, marginTop: 10}}>
              <div>
                <label>–û–ø—Ç</label>
                <input 
                  type="number"
                  step="0.01"
                  value={settings.wholesaleMarkup} 
                  onChange={e => setSettings({...settings, wholesaleMarkup: e.target.value})} 
                />
              </div>
              <div>
                <label>–†–æ–∑–¥—Ä—ñ–± 1</label>
                <input 
                  type="number"
                  step="0.01"
                  value={settings.retail1Markup} 
                  onChange={e => setSettings({...settings, retail1Markup: e.target.value})} 
                />
              </div>
              <div>
                <label>–†–æ–∑–¥—Ä—ñ–± 2</label>
                <input 
                  type="number"
                  step="0.01"
                  value={settings.retail2Markup} 
                  onChange={e => setSettings({...settings, retail2Markup: e.target.value})} 
                />
              </div>
            </div>
          </div>

          <div style={{marginBottom: 20}}>
            <h3>–ù–∞–∫–ª–∞–¥–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏ (%)</h3>
            <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 15, marginTop: 10}}>
              <div>
                <label>–ü—Ä–∞—Ü—è</label>
                <input 
                  type="number"
                  step="0.01"
                  value={settings.laborCostPercent} 
                  onChange={e => setSettings({...settings, laborCostPercent: e.target.value})} 
                />
              </div>
              <div>
                <label>–Ü–Ω—à—ñ –≤–∏—Ç—Ä–∞—Ç–∏</label>
                <input 
                  type="number"
                  step="0.01"
                  value={settings.overheadPercent} 
                  onChange={e => setSettings({...settings, overheadPercent: e.target.value})} 
                />
              </div>
            </div>
          </div>

          <div style={{marginBottom: 20}}>
            <h3>–ö–æ–º–ø–∞–Ω—ñ—è</h3>
            <div style={{marginTop: 10}}>
              <label>–ù–∞–∑–≤–∞</label>
              <input 
                value={settings.companyName} 
                onChange={e => setSettings({...settings, companyName: e.target.value})} 
              />
            </div>
          </div>

          <button type="submit" className="btn btn-primary">
            –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </button>
        </form>

        <div style={{marginTop: 30, padding: 20, background: '#f7fafc', borderRadius: 8}}>
          <h3>üìä –Ø–∫ –ø—Ä–∞—Ü—é—î —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è</h3>
          <ul style={{marginTop: 10, lineHeight: 2}}>
            <li>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ—Ü–µ–ø—Ç—É = Œ£ (–∫–æ–º–ø–æ–Ω–µ–Ω—Ç √ó —Ü—ñ–Ω–∞ –∑—ñ —Å–∫–ª–∞–¥—É)</li>
            <li>–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–æ—Ä–æ–±–∫–∏ = —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ—Ü–µ–ø—Ç—É √ó –≤–∞–≥–∞ √ó (1 + –Ω–∞–∫–ª–∞–¥–Ω—ñ%)</li>
            <li>–¶—ñ–Ω–∞ –ø—Ä–æ–¥–∞–∂—É = —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å √ó (1 + –Ω–∞—Ü–µ–Ω–∫–∞%)</li>
            <li>–£—Å—ñ —Ü—ñ–Ω–∏ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ</li>
          </ul>
        </div>
      </div>
    </div>
  );
}

export default SettingsPage;
EOFSETTINGS

echo ""
echo "üìÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ App.js —Å Settings..."
echo ""

# –î–æ–±–∞–≤–∏–º import SettingsPage –≤ –Ω–∞—á–∞–ª–æ App.js –∏ route –≤ –∫–æ–Ω—Ü–µ
# –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø–æ–ª–Ω—ã–π update –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —á–∞—Å—Ç—è—Ö

echo ""
echo "‚úÖ –ü–∞—Ç—á v4.2 –±–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã!"
echo ""
echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose down"
echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose up -d --build"
echo "   3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost"
echo ""
echo "üìã –ù–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:"
echo "   ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å —Å —Ç–∏–ø–∞–º–∏ (—Å—ã—Ä—å—ë/–ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç/—É–ø–∞–∫–æ–≤–∫–∞)"
echo "   ‚úÖ –†–µ—Ü–µ–ø—Ç—ã —Å—á–∏—Ç–∞—é—Ç —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "   ‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ–ª—É—á–∞—é—Ç —Ü–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—Ü–µ–Ω–æ–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
echo "   ‚úÖ API –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏: GET /api/recipes/:id/cost"
echo "   ‚úÖ API –¥–ª—è –ø–µ—Ä–µ—Å—á—ë—Ç–∞ —Ç–æ–≤–∞—Ä–∞: POST /api/products/:id/recalculate"
echo ""
echo "üî• –í–ê–ñ–ù–û:"
echo "   - –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ - —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "   - –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º - —Ü–µ–Ω—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ù–ï –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "   - –î–ª—è –ø–µ—Ä–µ—Å—á—ë—Ç–∞ –≤—ã–∑–æ–≤–∏—Ç–µ POST /api/products/:id/recalculate"
echo ""
