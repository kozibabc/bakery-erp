import React, { useState } from 'react';
import { BrowserRouter, Routes, Route, Navigate, NavLink } from 'react-router-dom';

function LoginPage({ onLogin }) {
  const [login, setLogin] = useState('admin');
  const [password, setPassword] = useState('admin');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('http://localhost:3000/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ login, password })
      });
      const data = await res.json();
      if (data.token) {
        onLogin(data.token, data.user);
      } else {
        alert('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É');
      }
    } catch (err) {
      alert('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è');
    }
  };

  return (
    <div className="login-page">
      <div className="login-card">
        <h2 style={{textAlign: 'center', marginBottom: 20}}>üç∞ Bakery ERP v4.0</h2>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <input value={login} onChange={e => setLogin(e.target.value)} placeholder="–õ–æ–≥—ñ–Ω" />
          </div>
          <div className="form-group">
            <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="–ü–∞—Ä–æ–ª—å" />
          </div>
          <button type="submit" className="btn btn-primary" style={{width: '100%'}}>–£–≤—ñ–π—Ç–∏</button>
        </form>
      </div>
    </div>
  );
}

function Dashboard() {
  const user = JSON.parse(localStorage.getItem('user') || '{}');
  return (
    <div className="card">
      <h2>üè† –ì–æ–ª–æ–≤–Ω–∞</h2>
      <p>–í—ñ—Ç–∞—î–º–æ, {user.name || '–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'}!</p>
      <h3>–°–∏—Å—Ç–µ–º–∞ v4.0 –∑–∞–ø—É—â–µ–Ω–∞</h3>
      <ul style={{marginTop: 20, lineHeight: 2}}>
        <li>‚úÖ –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö</li>
        <li>‚úÖ –ú–æ–¥—É–ª—å –∑–∞–∫—É–ø–æ–∫</li>
        <li>‚úÖ –°–∫–ª–∞–¥ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º</li>
        <li>‚úÖ –°–ø–∏—Å–∞–Ω–Ω—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞</li>
        <li>‚úÖ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å–æ–±—ñ–≤–∞—Ä—Ç–æ—Å—Ç—ñ</li>
        <li>‚úÖ PDF —Ç–∞ Excel –ø—Ä–∞–π—Å–∏</li>
      </ul>
    </div>
  );
}

function ComingSoonPage({ title }) {
  return (
    <div className="card">
      <h2>{title}</h2>
      <p>–°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –±—É–¥–µ –¥–æ–¥–∞–Ω–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.</p>
    </div>
  );
}

function App() {
  const [token, setToken] = useState(localStorage.getItem('token'));

  const handleLogin = (newToken, user) => {
    localStorage.setItem('token', newToken);
    localStorage.setItem('user', JSON.stringify(user));
    setToken(newToken);
  };

  const handleLogout = () => {
    localStorage.clear();
    setToken(null);
  };

  if (!token) return <LoginPage onLogin={handleLogin} />;

  return (
    <BrowserRouter>
      <div className="app">
        <div className="sidebar">
          <h1>üç∞ Sazhenko</h1>
          <nav>
            <NavLink to="/" end>üè† –ì–æ–ª–æ–≤–Ω–∞</NavLink>
            <NavLink to="/purchases">üì¶ –ó–∞–∫—É–ø–∫–∏</NavLink>
            <NavLink to="/stock">üìä –°–∫–ª–∞–¥</NavLink>
            <NavLink to="/components">üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏</NavLink>
            <NavLink to="/recipes">üìã –†–µ—Ü–µ–ø—Ç–∏</NavLink>
            <NavLink to="/products">üç∞ –¢–æ–≤–∞—Ä–∏</NavLink>
            <NavLink to="/orders">üìù –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</NavLink>
            <NavLink to="/clients">üë• –ö–ª—ñ—î–Ω—Ç–∏</NavLink>
            <NavLink to="/suppliers">üöö –ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏</NavLink>
            <NavLink to="/analytics">üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</NavLink>
            <NavLink to="/settings">‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</NavLink>
          </nav>
          <button 
            className="btn btn-danger" 
            onClick={handleLogout} 
            style={{marginTop: 'auto', width: '100%'}}
          >
            –í–∏—Ö—ñ–¥
          </button>
        </div>
        <div className="main">
          <Routes>
            <Route path="/" element={<Dashboard />} />
            <Route path="/purchases" element={<ComingSoonPage title="üì¶ –ó–∞–∫—É–ø–∫–∏" />} />
            <Route path="/stock" element={<ComingSoonPage title="üìä –°–∫–ª–∞–¥" />} />
            <Route path="/components" element={<ComingSoonPage title="üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏" />} />
            <Route path="/recipes" element={<ComingSoonPage title="üìã –†–µ—Ü–µ–ø—Ç–∏" />} />
            <Route path="/products" element={<ComingSoonPage title="üç∞ –¢–æ–≤–∞—Ä–∏" />} />
            <Route path="/orders" element={<ComingSoonPage title="üìù –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è" />} />
            <Route path="/clients" element={<ComingSoonPage title="üë• –ö–ª—ñ—î–Ω—Ç–∏" />} />
            <Route path="/suppliers" element={<ComingSoonPage title="üöö –ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏" />} />
            <Route path="/analytics" element={<ComingSoonPage title="üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞" />} />
            <Route path="/settings" element={<ComingSoonPage title="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" />} />
            <Route path="*" element={<Navigate to="/" />} />
          </Routes>
        </div>
      </div>
    </BrowserRouter>
  );
}

export default App;
