import React, { useState } from 'react';
import { BrowserRouter, Routes, Route, NavLink } from 'react-router-dom';
import ClientsPage from './pages/ClientsPage';
import SuppliersPage from './pages/SuppliersPage';
import ComponentsPage from './pages/ComponentsPage';
import PurchasesPage from './pages/PurchasesPage';
import StockPage from './pages/StockPage';
import ProductsPage from './pages/ProductsPage';
import RecipesPage from './pages/RecipesPage';
import OrdersPage from './pages/OrdersPage';
import UsersPage from './pages/UsersPage';
import AnalyticsPage from './pages/AnalyticsPage';

function Login({ onLogin }) {
  const [login, setLogin] = useState('admin');
  const [password, setPassword] = useState('admin');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('http://localhost:3000/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ login, password })
      });
      const data = await res.json();
      if (data.token) onLogin(data.token);
      else alert('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É');
    } catch { alert('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è'); }
  };

  return (
    <div className="login-page">
      <div className="login-card">
        <h2 style={{textAlign: 'center', marginBottom: 20}}>üç∞ Bakery ERP v4.1</h2>
        <form onSubmit={handleSubmit}>
          <input value={login} onChange={e => setLogin(e.target.value)} placeholder="–õ–æ–≥—ñ–Ω" />
          <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="–ü–∞—Ä–æ–ª—å" />
          <button type="submit" className="btn btn-primary" style={{width: '100%'}}>–£–≤—ñ–π—Ç–∏</button>
        </form>
      </div>
    </div>
  );
}

function Dashboard() {
  return (
    <div className="card">
      <h2>üè† –ì–æ–ª–æ–≤–Ω–∞</h2>
      <p>–í—ñ—Ç–∞—î–º–æ –≤ Bakery ERP v4.1 ADVANCED!</p>
      <h3 style={{marginTop: 20}}>‚úÖ –ü–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª:</h3>
      <ul style={{marginTop: 10, lineHeight: 2}}>
        <li>‚úÖ –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è</li>
        <li>‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –∑ —Ç–∏–ø–∞–º–∏</li>
        <li>‚úÖ –†–µ—Ü–µ–ø—Ç–∏ –∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏</li>
        <li>‚úÖ –ó–∞–∫—É–ø–∫–∏ ‚Üí –°–∫–ª–∞–¥ (–∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è)</li>
        <li>‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ç–æ–≤–∞—Ä–∞–º–∏</li>
        <li>‚úÖ –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å</li>
        <li>‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</li>
        <li>‚úÖ –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</li>
      </ul>
    </div>
  );
}

function ComingSoon({ title }) {
  return (
    <div className="card">
      <h2>{title}</h2>
      <p>–°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.</p>
    </div>
  );
}

function App() {
  const [token, setToken] = useState(localStorage.getItem('token'));

  const handleLogin = (newToken) => {
    localStorage.setItem('token', newToken);
    setToken(newToken);
  };

  const handleLogout = () => {
    localStorage.clear();
    setToken(null);
  };

  if (!token) return <Login onLogin={handleLogin} />;

  const navStyle = ({ isActive }) => ({
    display: 'block',
    color: 'white',
    textDecoration: 'none',
    padding: '10px',
    margin: '5px 0',
    borderRadius: '5px',
    background: isActive ? 'rgba(255,255,255,0.2)' : 'transparent'
  });

  return (
    <BrowserRouter>
      <div className="app">
        <div className="sidebar">
          <h1>üç∞ Sazhenko</h1>
          <nav>
            <NavLink to="/" end style={navStyle}>üè† –ì–æ–ª–æ–≤–Ω–∞</NavLink>
            <NavLink to="/purchases" style={navStyle}>üì¶ –ó–∞–∫—É–ø–∫–∏</NavLink>
            <NavLink to="/stock" style={navStyle}>üìä –°–∫–ª–∞–¥</NavLink>
            <NavLink to="/components" style={navStyle}>üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏</NavLink>
            <NavLink to="/recipes" style={navStyle}>üìã –†–µ—Ü–µ–ø—Ç–∏</NavLink>
            <NavLink to="/products" style={navStyle}>üç∞ –¢–æ–≤–∞—Ä–∏</NavLink>
            <NavLink to="/orders" style={navStyle}>üìù –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</NavLink>
            <NavLink to="/clients" style={navStyle}>üë• –ö–ª—ñ—î–Ω—Ç–∏</NavLink>
            <NavLink to="/suppliers" style={navStyle}>üöö –ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏</NavLink>
            <NavLink to="/users" style={navStyle}>üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</NavLink>
            <NavLink to="/analytics" style={navStyle}>üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</NavLink>
            <NavLink to="/settings" style={navStyle}>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</NavLink>
          </nav>
          <button 
            className="btn" 
            onClick={handleLogout} 
            style={{
              marginTop: 'auto',
              width: '100%',
              background: 'rgba(255,255,255,0.2)',
              color: 'white'
            }}
          >
            üö™ –í–∏—Ö—ñ–¥
          </button>
        </div>
        <div className="main">
          <Routes>
            <Route path="/" element={<Dashboard />} />
            <Route path="/purchases" element={<PurchasesPage />} />
            <Route path="/stock" element={<StockPage />} />
            <Route path="/components" element={<ComponentsPage />} />
            <Route path="/recipes" element={<RecipesPage />} />
            <Route path="/products" element={<ProductsPage />} />
            <Route path="/orders" element={<OrdersPage />} />
            <Route path="/clients" element={<ClientsPage />} />
            <Route path="/suppliers" element={<SuppliersPage />} />
            <Route path="/users" element={<UsersPage />} />
            <Route path="/analytics" element={<AnalyticsPage />} />
            <Route path="/settings" element={<ComingSoon title="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" />} />
          </Routes>
        </div>
      </div>
    </BrowserRouter>
  );
}

export default App;
